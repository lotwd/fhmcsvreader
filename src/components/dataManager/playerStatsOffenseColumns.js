import React from 'react'
import { Link } from 'gatsby'

export const playerStatsOffenseColumns = (width) => {
    const columnWidth = width ? width : '120'
    const columns = [
        {
            field:'fullName',
            headerName:'Name',
            width:'200',
            renderCell:(params, GridRenderCellParams)=>(
                <Link
                    to="/player"
                    state={{id:params.row.id, teamId:params.row.teamId}}
                >
                    {params.value}
                </Link>
            )
        },
        {
            field:'positions',
            headerName:'POS',
            width:columnWidth
        },
        {
            field:'games',
            headerName:'GP',
            width:columnWidth,
        },
        {
            field:'goals',
            headerName:'G',
            width:columnWidth, 
        },
        {
            field:'goalsPerGame',
            headerName:'G/GP',
            width:columnWidth, 
        },
        {
            field:'assists',
            headerName:'A',
            width:columnWidth,
        },
        {
            field:'assistsPerGame',
            headerName:'A/GP',
            width:columnWidth, 
        },
        {
            field:'points',
            headerName:'PTS',
            width:columnWidth,
        },
        {
            field:'pointsPerGame',
            headerName:'PTS/GP',
            width:columnWidth, 
        },
        {
            field:'shots',
            headerName:'S',
            width:columnWidth,
        },
        {
            field:'shotsPerGame',
            headerName:'S/GP',
            width:columnWidth
        },
        {
            field:'gameWinningGoals',
            headerName:'GWG',
            width:columnWidth
        },
        {
            field:'plusMinus',
            headerName:'+/-',
            width:columnWidth,
        },
        {
            field:'powerplayGoals',
            headerName:'PPG',
            width:columnWidth,
        },
        {
            field:'powerplayAssists',
            headerName:'PPA',
            width:columnWidth,
        },
        {
            field:'powerplayPoints',
            headerName:'PPPTS',
            width:columnWidth,
        },
        {
            field:'powerplayTimeOnIcePerGame',
            headerName:'PPTOI',
            width:columnWidth,
        },
        {
            field:'shorthandedGoals',
            headerName:'SHG',
            width:columnWidth,
        },
        {
            field:'shorthandedAssists',
            headerName:'SHA',
            width:columnWidth,
        },
        {
            field:'shorthandedPoints',
            headerName:'SHP',
            width:columnWidth,
        },
        {
            field:'timeOnIcePerGame',
            headerName:'TOI',
            width:columnWidth,
        },
        {
            field:'shorthandedTimeOnIcePerGame',
            headerName:'SHTOI',
            width:columnWidth
        },
        {
            field:'goalsFor60',
            headerName:'G/60',
            width:columnWidth
        },
        {
            field:'shotsFor60',
            headerName:'S/60',
            width:columnWidth
        },
        {
            field:'faceoffs',
            headerName:'FO',
            width:columnWidth
        },
        {
            field:'faceoffsWon',
            headerName:'FOW',
            width:columnWidth
        },
        {
            field:'faceoffWinPercent',
            headerName:'FO%',
            width:columnWidth
        },
        {
            field:'gameRating',
            headerName:'GR',
            width:columnWidth,
        },
        {
            field:'gameRatingOffense',
            headerName:'OR',
            width:columnWidth,
        },
    ]
    return columns
}