export const playerRows = (players, statSet) => {
    const rows = players?.map(player=>{
        const { id, teamId, fullName, positions } = player
        const playerStats = player?.stats?.[statSet]
        return(
        {
        id:id,
        teamId:teamId,
        fullName:fullName,
        games:playerStats?.games,
        goals:playerStats?.goals,
        goalsPerGame:playerStats?.goalsPerGame,
        assists:playerStats?.assists,
        assistsPerGame:playerStats?.assistsPerGame,
        points:playerStats?.points,
        pointsPerGame:playerStats?.pointsPerGame,
        goalsFirst:playerStats?.goalsFirst,
        goalsSecond:playerStats?.goalsSecond,
        goalsThird:playerStats?.goalsThird,
        assistsFirst:(playerStats?.primaryAssistsFirst + playerStats?.secondaryAssistsFirst),
        assistsSecond:(playerStats?.primaryAssistsSecond + playerStats?.secondaryAssistsSecond),
        assistsThird:(playerStats?.primaryAssistsThird + playerStats?.secondaryAssistsThird),
        assistsOT:(playerStats?.primaryAssistsOT + playerStats?.secondaryAssistsOT),
        goalsOT:playerStats?.goalsOT,
        primaryAssistsFirst:playerStats?.primaryAssistsFirst,
        primaryAssistsSecond:playerStats?.primaryAssistsSecond,
        primaryAssistsThird:playerStats?.primaryAssistsThird,
        primaryAssistsOT:playerStats?.primaryAssistsOT,
        secondaryAssistsFirst:playerStats?.secondaryAssistsFirst,
        secondaryAssistsSecond:playerStats?.secondaryAssistsSecond,
        secondaryAssistsThird:playerStats?.secondaryAssistsThird,
        secondaryAssistsOT:playerStats?.secondaryAssistsOT,
        pointsFirst:(playerStats?.primaryAssistsFirst + playerStats?.secondaryAssistsFirst + playerStats?.goalsFirst),
        pointsSecond:(playerStats?.primaryAssistsSecond + playerStats?.secondaryAssistsSecond + playerStats?.goalsSecond),
        pointsThird:(playerStats?.primaryAssistsThird + playerStats?.secondaryAssistsThird + playerStats?.goalsThird),
        pointsOT:(playerStats?.primaryAssistsOT + playerStats?.secondaryAssistsOT + playerStats?.goalsOT),
        plusMinus:playerStats?.plusMinus,
        penalties:playerStats?.penalties,
        penaltyMinutesPerGame:playerStats?.penaltyMinutesPerGame,
        powerplayGoals:playerStats?.powerplayGoals,
        powerplayAssists:playerStats?.powerplayAssists,
        powerplayPoints:playerStats?.powerplayPoints,
        shorthandedGoals:playerStats?.shorthandedGoals,
        shorthandedAssists:playerStats?.shorthandedAssists,
        shorthandedPoints:playerStats?.shorthandedPoints,
        fights:playerStats?.fights,
        fightsWon:playerStats?.fightsWon,
        fightWinPercent:playerStats?.fightWinPercent,
        hits:playerStats?.hits,
        hitsPerGame:playerStats?.hitsPerGame,
        takeaways:playerStats?.takeaways,
        takeawaysPerGame:playerStats?.takeawaysPerGame,
        giveaways:playerStats?.giveaways,
        giveawaysPerGame:playerStats?.giveawaysPerGame,
        shotsBlocked:playerStats?.shotsBlocked,
        shotsBlockedPerGame:playerStats?.shotsBlockedPerGame,
        shots:playerStats?.shots,
        shotsPerGame:playerStats?.shotsPerGame,
        timeOnIcePerGame:Date.parse(playerStats?.timeOnIcePerGame) ? playerStats?.timeOnIcePerGame.toTimeString().substr(3,5) : '',
        powerplayTimeOnIcePerGame:Date.parse(playerStats?.powerplayTimeOnIcePerGame) ? playerStats?.powerplayTimeOnIcePerGame.toTimeString().substr(3,5) : '00:00',
        shorthandedTimeOnIcePerGame:Date.parse(playerStats?.shorthandedTimeOnIcePerGame) ? playerStats?.shorthandedTimeOnIcePerGame.toTimeString().substr(3,5) : '00:00',
        pdo:playerStats?.pdo,
        goalsFor60:parseFloat(playerStats?.goalsFor60).toFixed(1),
        goalsAgainst60:parseFloat(playerStats?.goalsAgainst60).toFixed(1),
        shotsFor60:parseFloat(playerStats?.shotsFor60).toFixed(1),
        shotsAgainst60:parseFloat(playerStats?.shotsAgainst60).toFixed(1),
        cf:playerStats?.cf,
        ca:playerStats?.ca,
        cfPercent:playerStats?.cfPercent,
        cfPercentRel:playerStats?.cfPercentRel,
        ff:playerStats?.ff,
        fa:playerStats?.fa,
        ffPercent:playerStats?.ffPercent,
        ffPercentRel:playerStats?.ffPercentRel,
        gameWinningGoals:playerStats?.gameWinningGoals,
        faceoffs:playerStats?.faceoffs,
        faceoffsWon:playerStats?.faceoffsWon,
        faceoffWinPercent:playerStats?.faceoffWinPercent,
        minutes:playerStats?.minutes,
        minutesPerGame:playerStats?.minutesPerGame,
        wins:playerStats?.wins,
        losses:playerStats?.losses,
        ot:playerStats?.ot,
        shotsAgainst:playerStats?.shotsAgainst,
        shotsAgainstPerGame:playerStats?.shotsAgainstPerGame,
        saves:playerStats?.saves,
        savesPerGame:playerStats?.savesPerGame,
        goalsAgainst:playerStats?.goalsAgainst,
        goalsAgainstPerGame:playerStats?.goalsAgainstPerGame,
        goalsAgainstAverage:playerStats?.goalsAgainstAverage,
        shutouts:playerStats?.shutouts,
        savePercentage:playerStats?.savePercentage,
        gameRating:playerStats?.gameRating,
        gameRatingOffense:playerStats?.gameRatingOffense,
        gameRatingDefense:playerStats?.gameRatingDefense,
        positions:positions,
    })
})
    return rows || []
}

